#Colourful night light varient for RasP.iO nightlight by Robin Newman, October 2018
#include <FastLED.h>

#define NUM_LEDS 8
#define DATA_PIN 7
#define CLOCK_PIN 5
int pir = 0;
int ldr = 0;
int white_bright = 255;       // default brightness for white (0-255)
int buzz_disable = 0;         // change to 1 to switch off initial buzzer

#define COLOR_ORDER GRB
CRGB leds[NUM_LEDS];

#define UPDATES_PER_SECOND 100 //affects rate of colour change
CRGBPalette16 currentPalette;
TBlendType    currentBlending;

extern CRGBPalette16 myRedWhiteBluePalette;
extern const TProgmemPalette16 myRedWhiteBluePalette_p PROGMEM;


void setup() {
  delay( 3000 ); // power-up safety delay
  FastLED.addLeds<APA102, DATA_PIN, CLOCK_PIN, BGR, DATA_RATE_MHZ(12)>(leds, NUM_LEDS);
  FastLED.setBrightness(white_bright); // Global Brightness setting max 255

  currentPalette = RainbowColors_p;
  currentBlending = LINEARBLEND;
}


void loop()
{
  FastLED.clear();
  for (int i = 0; i < NUM_LEDS; i++) {     // iterate through the RGB LEDs
    leds[i].setRGB(0, 0, 0);              // set default colour or off
  }
  pir = digitalRead(12);                   // check PIR
  ldr = analogRead(7);                     // read light sensor (0 = very dark, 1023 = very bright)
  //      50-150 is usually a suitable threshold
  if (pir == 1) {                          // If motion detected
    digitalWrite(13, HIGH);                // PIR LED ON
    delay(100);                            // Delay so when dark the LED will flash on for 0.1s
  }
  else {
    digitalWrite(13, LOW);                 // PIR LED OFF
  }
  //if (pir == 1 && ldr <= 150 ) {         // if someone there AND dark(ish) no case
  if (pir == 1 && ldr <= 50 ) {            // if someone there AND dark(ish) with case
    digitalWrite(13, LOW);
    for (int i = 0; i < 1800; i++) {

      static uint8_t startIndex = 0;
      startIndex = startIndex + 1; /* motion speed */

      FillLEDsFromPaletteColors( startIndex);

      FastLED.show();
      FastLED.delay(1000 / UPDATES_PER_SECOND);
    }
    for (int j = white_bright; j > -1; j--) {
      for (int i = 0; i < NUM_LEDS; i++) {
        leds[i].setRGB(j, j, j);         // fading out the white over ~2s
      }
      FastLED.show();
      delay(10);                           // wait 10ms
    }

      }
      else {
        FastLED.show();                        // display current LED settings
        delay(500);                            // otherwise poll PIR sensor at 2 Hertz
      }
}



void FillLEDsFromPaletteColors( uint8_t colorIndex)
{
  uint8_t brightness = 255;

  for ( int i = 0; i < NUM_LEDS; i++) {
    leds[i] = ColorFromPalette( currentPalette, colorIndex, brightness, currentBlending);
    colorIndex += 3;
  }
}
